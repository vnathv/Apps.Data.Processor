variables:
  BuildConfiguration: 'release'
  BuildPlatform: 'any cpu'
  ProjectName: 'Apps.DataProcessor.Database'
  Subject: 'AppsDataProcessorDatabase'
  Database: 'Vij_Main'

# Clear Before Build
resources:
- repo: self
  clean: true
stages:
- stage: Build
  displayName: Build stage
  
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Vijay
    

    steps:

    # # GitVersion
    # - task: GitVersion@5
    #   displayName: GitVersion
    #   inputs:
    #     versionSpec: '5.x'
    #     updateAssemblyInfo: false

    #Install .NET SDK 7.0.x
    # - task: UseDotNet@2
    #   displayName: 'Use .NET SDK 7.0.x'
    #   inputs:
    #       packageType: sdk
    #       version: 7.0.x
    #       installationPath: $(Agent.ToolsDirectory)/dotnet

    # Restore
    - task: DotNetCoreCLI@2
      displayName: Nuget restore
      inputs:
        command: 'restore'
        feedsToUse: config
        nugetConfigPath: Nuget.config
        
    - task: CopyFiles@2
      displayName: 'Copy files'
      inputs:
        sourceFolder: '.'
        contents: 'IncrementalDeploy.xml'
        targetFolder: '$(Build.SourcesDirectory)\output'

    - task: MSBuild@1
      displayName: 'Build database dacpac'
      inputs:
        solution: src/$(ProjectName)/Apps.DataProcessor.Database.sqlproj
        platform: '$(BuildPlatform)'
        configuration: Release
        msbuildArguments: '/p:OutputPath="$(Build.SourcesDirectory)\output"'
    
    - task: ArchiveFiles@1
      displayName: 'Archive files'
      inputs:
        rootFolder: '$(Build.SourcesDirectory)\output'
        includeRootFolder: false
        archiveFile: '$(Build.ArtifactStagingDirectory)\deploy\database-master.zip'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\deploy'

- stage: Dev
  displayName: Dev
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: 'Development'
      pool:
       name: Vijay
      strategy:
       runOnce:
         deploy:
           steps:
             - task: ExtractFiles@1
               displayName: 'Extract Files'
               inputs:
                archiveFilePatterns: '$(Pipeline.Workspace)/drop/*.zip'
                destinationFolder: '$(System.DefaultWorkingDirectory)\database\extract'
                cleanDestinationFolder: true
                overwriteExistingFiles: false
             - task: CmdLine@2
               inputs:
                 script: |
                   cd $(Pipeline.Workspace)/drop
                   dir
                   echo 'first'
                   cd $(System.DefaultWorkingDirectory)\database\extract
                   dir
                   
                   echo 'Second'
                   cd $(Build.ArtifactStagingDirectory)
                   dir
             - task: SqlDacpacDeploymentOnMachineGroup@0
               inputs:
                 TaskType: 'dacpac'
                 DacpacFile: '$(System.DefaultWorkingDirectory)\database\extract\Apps.DataProcessor.Database.dacpac'
                 TargetMethod: 'server'
                 ServerName: '$(SqlServerName)'
                 DatabaseName: '$(Database)'
                 AuthScheme: 'sqlServerAuthentication'
                 SqlUsername: '$(SqlServerLogin)'
                 SqlPassword: '$(SqlServerPassword)'
                 PublishProfile: '$(System.DefaultWorkingDirectory)\database\extract\IncrementalDeploy.xml'

 